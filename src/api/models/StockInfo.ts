/* tslint:disable */
/* eslint-disable */
/**
 * Toi.Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ExchangeRate,
    ExchangeRateFromJSON,
    ExchangeRateFromJSONTyped,
    ExchangeRateToJSON,
    IntradayDataPoint,
    IntradayDataPointFromJSON,
    IntradayDataPointFromJSONTyped,
    IntradayDataPointToJSON,
    StockPrice,
    StockPriceFromJSON,
    StockPriceFromJSONTyped,
    StockPriceToJSON,
} from './';

/**
 * 
 * @export
 * @interface StockInfo
 */
export interface StockInfo {
    /**
     * 
     * @type {string}
     * @memberof StockInfo
     */
    symbol?: string | null;
    /**
     * 
     * @type {StockPrice}
     * @memberof StockInfo
     */
    stockPrice?: StockPrice;
    /**
     * 
     * @type {ExchangeRate}
     * @memberof StockInfo
     */
    exchangeRate?: ExchangeRate;
    /**
     * 
     * @type {Array<IntradayDataPoint>}
     * @memberof StockInfo
     */
    intradayData?: Array<IntradayDataPoint> | null;
}

export function StockInfoFromJSON(json: any): StockInfo {
    return StockInfoFromJSONTyped(json, false);
}

export function StockInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): StockInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'symbol': !exists(json, 'symbol') ? undefined : json['symbol'],
        'stockPrice': !exists(json, 'stockPrice') ? undefined : StockPriceFromJSON(json['stockPrice']),
        'exchangeRate': !exists(json, 'exchangeRate') ? undefined : ExchangeRateFromJSON(json['exchangeRate']),
        'intradayData': !exists(json, 'intradayData') ? undefined : (json['intradayData'] === null ? null : (json['intradayData'] as Array<any>).map(IntradayDataPointFromJSON)),
    };
}

export function StockInfoToJSON(value?: StockInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'symbol': value.symbol,
        'stockPrice': StockPriceToJSON(value.stockPrice),
        'exchangeRate': ExchangeRateToJSON(value.exchangeRate),
        'intradayData': value.intradayData === undefined ? undefined : (value.intradayData === null ? null : (value.intradayData as Array<any>).map(IntradayDataPointToJSON)),
    };
}

